/*
 * generated by Xtext 2.15.0
 */
package ctwedge.tests

import com.google.inject.Inject
import ctwedge.ctWedge.CitModel
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(CTWedgeInjectorProvider)
class CTWedgeParsingTest {
	@Inject
	ParseHelper<CitModel> parseHelper

	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			/*
									 * This is an example model
									 */
									Model Phone
									 Parameters:
									   emailViewer : Boolean
									   textLines:  [ 25 .. 30 ]
									   display : {16MC, 8MC, BW}
									
									 Constraints:
									   # emailViewer => textLines > 28 #
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	@Test
	def void loadModelBoolean() {
		loadModelBooleanConstraint("A = B")
		loadModelBooleanConstraint("A == B")
		loadModelBooleanConstraint("A <=> B")
	}

	def void loadModelBooleanConstraint(String s){
		val result = parseHelper.parse('''
		/*
								 * This is an example model
								 */
								Model Phone
								 Parameters:
								   A : Boolean
								   B : Boolean
								
								 Constraints:
								   # ''' + s + ''' #
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		val model = result as CitModel
		Assertions.assertNotNull(model)
		Assertions.assertEquals(1, model.constraints.size)
		
	}

}
